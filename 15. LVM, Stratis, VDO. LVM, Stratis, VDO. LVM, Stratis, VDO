{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNx3yJ+mKZyyUFK991aqvUz"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# LVM"],"metadata":{"id":"SMTAkUkfdMy9"}},{"cell_type":"markdown","source":["Volume group (physical volumes: disks, partitions, etc.) → Logical volumes → File systems"],"metadata":{"id":"eTxRUhWVeeWz"}},{"cell_type":"markdown","source":["### LVM creation (parted)\n","- lsblk\n","- parted /dev/nvme0n2\n","- mkpart → lvm1 → enter → 2G → 3G\n","- print (to see number)\n","- set number lvm on\n","- quit\n","- pvcreate /dev/nvme0n2p3 $ - $ create physical volume\n","- pvs $ - $ check\n","- vgcreate vgdata /dev/nvme0n2p3 $ - $ create volume group\n","- pvs\n","- vgs\n","- lvcreate -n lvdata(name) -L 812M vgdata(where) $ - $ create logical volume\n","- lvs\n","- mkfs.xfs /dev/vgdata/lvdata $ - $ create a file system\n","- mkdir /mounts/lvm1\n","- /etc/fstab: /dev/vgdata/lvdata /mounts/lvm1 xfs defaults 0 0 \n","- mount -a\n","- findmnt\n"],"metadata":{"id":"qJDRL58rfSMC"}},{"cell_type":"markdown","source":["### Device mapper\n","- System that the kernel uses to interface storage devices\n","- Generates meaningless names. Meaningful names are provided as symbolic links through /dev/mapper: /dev/mapper/vgdata-lvdata\n","- Use LVM generated symbolic links: /dev/vgdata/lvdata\n","- ls -l /dev/vgdata/lvdata /dev/mapper/vgdata-lvdata\n","- Never use device mapper names, because they are changed"],"metadata":{"id":"6e1Al8S-jT40"}},{"cell_type":"markdown","source":["### Resizing LV\n","- df -h\n","- vgs $ - $ check availability\n","- vgextend vgdata /dev/nvme0n2p4$ - $ add PV to VG\n","- lvextend -r -L +1G /dev/vgdata/lvdata $ - $ -r option for extending file system also\n","- e2resize $ - $ if you forgot about -r option (for ext)\n","- xfs_growsfs $ - $ for xfs  \n","  Shrinking is not possible on XFS.\n","- "],"metadata":{"id":"PzF6hxI5kOGJ"}},{"cell_type":"markdown","source":["# Stratis\n","Provides ***ZFS, Btrfs***. Has XFS on top. It is built on top of any block device, including LVM devices, excluding partitions. Offer advanced features: cache tier, snapshots, API, monitoring and repair.  \n","***The Stratis Pool*** (/dev/stratis/my-pool) is created from one or more storage devices (blockdev). Each pool can contain mult. file systems, and they are thin provisioned.  \n","***Thin provisioning*** - a method of optimizing the efficiency with which the available space is utilized.  "],"metadata":{"id":"txeYQiDemgpY"}},{"cell_type":"markdown","source":["### Stratis config\n","- yum install stratis-cli stratisd\n","- systemctl enable --now stratisd\n","- stratis pool create mypool /dev/nvme0n2\n","  - stratis pool\n","  - stratis blockdev add-data $ - $ add new block device\n","  - partitions are NOT supported\n","  - block device must be $\\geq$ 1GiB\n","- stratis fs create mypool myfs1\n"," - this will create XFS\n"," - stratis fs\n","- stratis fs list mypool $ - $ show all fs in pool\n","- mkdir /myfs1\n","- mount /dev/stratis/mypool/myfs1 /myfs1\n","- stratis pool list\n","- stratis filesystem list\n","- stratis blockdev list mypool\n","- lsblk\n","- blkid $ - $ find volume UUID\n","- mount by UUID in /etc/fstab: UUID=\"\" /myfs1 xfs defaults 0 0\n","- reboot\n","- mount | grep myfs"],"metadata":{"id":"QkIhAqY77XwP"}},{"cell_type":"markdown","source":["### Extend stratis pool\n","- stratis pool add-data mypool /dev/nvme0n3 $ - $ add another block device\n","\n","Standard Linux tools don't give accurate sizes as Stratis volumes are this provisioned.\n","- stratis blockdev $ - $ info about block devices used for stratis\n","- stratis pool $ - $ pools info (physical used should not come too close to physical size)\n","- stratis filesystem\n","- df -h | grep myfs $ - $ don't use!!! because volumes are this provisioned"],"metadata":{"id":"UfpghwCl9uTk"}},{"cell_type":"markdown","source":["### Stratis snapshots\n","Snapshot is an individual file system that can be mounted. Can be modified after creation. Snapshot and its origin are not linked: snapshot can live longer. Each snapshot needs at least GB for backing storage for XFS log.\n","- stratis fs snapshot mypool myfs1 myfs1-snapshot\n","- mount /stratis/mypools/myfs1-snapshot /mnt\n","\n","Revert to snapshot:\n","- umount /myfs1\n","- stratis fs destroy mypool myfs1\n","- stratis fs snapshot mypool myfs1-snapshot myfs1\n","\n","Delete a snapshot:\n","- stratis filesystem destroy mypool mysnapshot\n","- stratis filesystem destroy mypool myfs1\n","- stratis pool destroy mypool $ - $ delete a pool when there is no fs in pool"],"metadata":{"id":"VJLxCqdY-34g"}},{"cell_type":"markdown","source":["# VDO\n","Virtual Data Optimizer - does compression and manages deduplication.\n","- yum install vdo kmod-kvdo\n","- vdo create --name=vdo1 --device=/dev/nvm20n3p1 --vdoLogicalSize=1T $ - $ p1 means creating on top of the partition, but we can also create on the top of disk\n","- mkfs.xfs -K /dev/mapper/vdo1\n","- udevadm settle\n","- /etc/fstab: x-systemd.requires=vdo.service, discard\n","  - alternatively: cd /usr/share/doc/vdo/examples/systemd\n","  - cp VDO.mount.example /etc/systemd/system/vdo1.mount\n","  - name=vdo1.mount, what=/dev/mapper/vdo1, where=/vdo1\n","  - systemctl daemon-reload\n","- systemctl enable --now vdo1.mount\n","- vdostats --human-readable\n","- df -h $ - $ don't use!!!\n","- reboot\n","- press e, delete rhgb quiet, ctrl-x\n","- mount | grep vdo"],"metadata":{"id":"7NzZmgZdDNYs"}},{"cell_type":"markdown","source":["# LUKS encrypted volumes\n","- parted /dev/nvme0n2\n","  - mkpart\n","- cryptsetup luksFormat /dev/nvme0n2p5$ - $ format the luks device\n","- cryptsetup luksOpen /dev/nvme0n2p5 secret$ - $ open device and create a device mapper name\n","- mkfs.xfs /dev/mapper/secret\n","- mkdir /secret\n","- mount \n","- /etc/crypttab $ - $ automate luksOpen\n","  - secret /dev/nvme0n2p5 none\n","- /etc/fstab $ - $ automate mounting the volume\n"],"metadata":{"id":"EI_qIuJaSCKg"}}]}